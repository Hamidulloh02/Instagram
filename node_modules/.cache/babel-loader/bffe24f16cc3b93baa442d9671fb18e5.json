{"ast":null,"code":"var _jsxFileName = \"D:\\\\React doc\\\\React instagram\\\\react_app\\\\src\\\\Component\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useAutocomplete } from '@mui/base/AutocompleteUnstyled';\nimport { styled } from '@mui/material/styles';\nimport { grey } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label = styled('label')({\n  display: 'block'\n});\nconst Input = styled('input')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    padding: 5,\n    width: 250,\n    borderRadius: 5,\n    backgroundColor: 'white',\n    color: theme.palette.getContrastText(theme.palette.background.paper)\n  };\n});\n_c = Input;\nconst Listbox = styled('ul')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    width: 300,\n    margin: 0,\n    padding: 0,\n    zIndex: 1000,\n    position: 'absolute',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: 250,\n    marginLeft: 60,\n    border: '1px solid rgba(0,0,0,.25)',\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: '#4a8df6',\n      color: 'white',\n      cursor: 'pointer'\n    },\n    '& li:active': {\n      backgroundColor: '#2977f5',\n      color: 'white'\n    }\n  };\n});\n_c2 = Listbox;\nexport default function UseAutocomplete() {\n  _s();\n\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions\n  } = useAutocomplete({\n    id: 'use-autocomplete-demo',\n    options: top100Films,\n    getOptionLabel: option => option.title\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n      children: /*#__PURE__*/_jsxDEV(Input, { ...getInputProps(),\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), groupedOptions.length > 0 ? /*#__PURE__*/_jsxDEV(Listbox, { ...getListboxProps(),\n      children: groupedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", { ...getOptionProps({\n          option,\n          index\n        }),\n        children: option.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_s(UseAutocomplete, \"BbB0zH0PJlIPXzZ5IEUfijcJ2a8=\", false, function () {\n  return [useAutocomplete];\n});\n\n_c3 = UseAutocomplete;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Listbox\");\n$RefreshReg$(_c3, \"UseAutocomplete\");","map":{"version":3,"sources":["D:/React doc/React instagram/react_app/src/Component/Search.js"],"names":["React","useAutocomplete","styled","grey","Label","display","Input","theme","padding","width","borderRadius","backgroundColor","color","palette","getContrastText","background","paper","Listbox","margin","zIndex","position","listStyle","overflow","maxHeight","marginLeft","border","cursor","UseAutocomplete","getRootProps","getInputLabelProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","id","options","top100Films","getOptionLabel","option","title","length","map","index","year"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useAutocomplete } from '@mui/base/AutocompleteUnstyled';\r\nimport { styled } from '@mui/material/styles';\r\nimport { grey } from '@mui/material/colors';\r\n\r\nconst Label = styled('label')({\r\n  display: 'block',\r\n});\r\n\r\nconst Input = styled('input')(({ theme }) => ({\r\n  \r\n  padding:5,\r\n  width: 250,\r\n  borderRadius:5,\r\n  backgroundColor: 'white',\r\n  color: theme.palette.getContrastText(theme.palette.background.paper),\r\n}));\r\n\r\nconst Listbox = styled('ul')(({ theme }) => ({\r\n  width: 300,\r\n  margin: 0,\r\n  padding: 0,\r\n  zIndex: 1000,\r\n  position: 'absolute',\r\n  listStyle: 'none',\r\n  backgroundColor: theme.palette.background.paper,\r\n  overflow: 'auto',\r\n  maxHeight: 250,\r\n  marginLeft:60,\r\n  border: '1px solid rgba(0,0,0,.25)',\r\n  '& li[data-focus=\"true\"]': {\r\n    backgroundColor: '#4a8df6',\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n  },\r\n  '& li:active': {\r\n    backgroundColor: '#2977f5',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nexport default function UseAutocomplete() {\r\n  const {\r\n    getRootProps,\r\n    getInputLabelProps,\r\n    getInputProps,\r\n    getListboxProps,\r\n    getOptionProps,\r\n    groupedOptions,\r\n  } = useAutocomplete({\r\n    id: 'use-autocomplete-demo',\r\n    options: top100Films,\r\n    getOptionLabel: (option) => option.title,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps()}>\r\n        {/* <Label {...getInputLabelProps()}>useAutocomplete</Label> */}\r\n        <Input {...getInputProps()} placeholder='Search'/>\r\n      </div>\r\n      {groupedOptions.length > 0 ? (\r\n        <Listbox {...getListboxProps()}>\r\n          {groupedOptions.map((option, index) => (\r\n            <li {...getOptionProps({ option, index })}>{option.title}</li>\r\n          ))}\r\n        </Listbox>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n  { title: 'Casablanca', year: 1942 },\r\n  { title: 'City Lights', year: 1931 },\r\n  { title: 'Psycho', year: 1960 },\r\n  { title: 'The Green Mile', year: 1999 },\r\n  { title: 'The Intouchables', year: 2011 },\r\n  { title: 'Modern Times', year: 1936 },\r\n  { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  { title: 'Rear Window', year: 1954 },\r\n  { title: 'The Pianist', year: 2002 },\r\n  { title: 'The Departed', year: 2006 },\r\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  { title: 'Back to the Future', year: 1985 },\r\n  { title: 'Whiplash', year: 2014 },\r\n  { title: 'Gladiator', year: 2000 },\r\n  { title: 'Memento', year: 2000 },\r\n  { title: 'The Prestige', year: 2006 },\r\n  { title: 'The Lion King', year: 1994 },\r\n  { title: 'Apocalypse Now', year: 1979 },\r\n  { title: 'Alien', year: 1979 },\r\n  { title: 'Sunset Boulevard', year: 1950 },\r\n  {\r\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964,\r\n  },\r\n  { title: 'The Great Dictator', year: 1940 },\r\n  { title: 'Cinema Paradiso', year: 1988 },\r\n  { title: 'The Lives of Others', year: 2006 },\r\n  { title: 'Grave of the Fireflies', year: 1988 },\r\n  { title: 'Paths of Glory', year: 1957 },\r\n  { title: 'Django Unchained', year: 2012 },\r\n  { title: 'The Shining', year: 1980 },\r\n  { title: 'WALL·E', year: 2008 },\r\n  { title: 'American Beauty', year: 1999 },\r\n  { title: 'The Dark Knight Rises', year: 2012 },\r\n  { title: 'Princess Mononoke', year: 1997 },\r\n  { title: 'Aliens', year: 1986 },\r\n  { title: 'Oldboy', year: 2003 },\r\n  { title: 'Once Upon a Time in America', year: 1984 },\r\n  { title: 'Witness for the Prosecution', year: 1957 },\r\n  { title: 'Das Boot', year: 1981 },\r\n  { title: 'Citizen Kane', year: 1941 },\r\n  { title: 'North by Northwest', year: 1959 },\r\n  { title: 'Vertigo', year: 1958 },\r\n  {\r\n    title: 'Star Wars: Episode VI - Return of the Jedi',\r\n    year: 1983,\r\n  },\r\n  { title: 'Reservoir Dogs', year: 1992 },\r\n  { title: 'Braveheart', year: 1995 },\r\n  { title: 'M', year: 1931 },\r\n  { title: 'Requiem for a Dream', year: 2000 },\r\n  { title: 'Amélie', year: 2001 },\r\n  { title: 'A Clockwork Orange', year: 1971 },\r\n  { title: 'Like Stars on Earth', year: 2007 },\r\n  { title: 'Taxi Driver', year: 1976 },\r\n  { title: 'Lawrence of Arabia', year: 1962 },\r\n  { title: 'Double Indemnity', year: 1944 },\r\n  {\r\n    title: 'Eternal Sunshine of the Spotless Mind',\r\n    year: 2004,\r\n  },\r\n  { title: 'Amadeus', year: 1984 },\r\n  { title: 'To Kill a Mockingbird', year: 1962 },\r\n  { title: 'Toy Story 3', year: 2010 },\r\n  { title: 'Logan', year: 2017 },\r\n  { title: 'Full Metal Jacket', year: 1987 },\r\n  { title: 'Dangal', year: 2016 },\r\n  { title: 'The Sting', year: 1973 },\r\n  { title: '2001: A Space Odyssey', year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: 'Toy Story', year: 1995 },\r\n  { title: 'Bicycle Thieves', year: 1948 },\r\n  { title: 'The Kid', year: 1921 },\r\n  { title: 'Inglourious Basterds', year: 2009 },\r\n  { title: 'Snatch', year: 2000 },\r\n  { title: '3 Idiots', year: 2009 },\r\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n];"]},"metadata":{},"sourceType":"module"}